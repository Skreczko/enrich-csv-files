version: "3.8"

services:
  # Database service
  postgres:
    container_name: atc-postgres
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: transformer
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Async tasks broker service
  redis:
    container_name: atc-redis
    image: redis:6
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Frontend
  webpack:
    image: webpack-node
    container_name: atc-webpack
    build:
      context: ${PWD}
      dockerfile: frontend/Dockerfile-node
    command: npm run build-dev
    ports:
      - '8001:8001'
    volumes:
      - ./frontend/:/home/user/frontend/
      - /home/user/frontend/node_modules

  # Main backend application
  django:
    container_name: atc-django
    build:
      context: ${PWD}
      dockerfile: backend/Dockerfile-dev
    image: atc-django
    command: bash -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - backend/.env
    environment:
      - DJANGO_SETTINGS_MODULE=transformer.settings
    depends_on:
      - postgres
      - redis
      - celery
      - webpack
    volumes:
      - ${PWD}/backend/:/home/user/backend/:delegated
      - ${PWD}/media/:/home/user/media/:delegated
      - ./frontend/:/home/user/frontend/
    restart: on-failure

  # Async tasks worker
  celery:
    container_name: atc-celery
    build:
      context: ${PWD}
      dockerfile: backend/Dockerfile-dev
    image: atc-django
    env_file:
      - backend/.env
    environment:
      BROKER_URL: redis://redis:6379
      DATABASE_HOST: postgres
      DATABASE_USER: postgres
      DATABASE_NAME: transformer
    command: watchmedo auto-restart --pattern '*.py' --signal SIGINT --recursive -- celery -A transformer worker -l debug
    volumes:
      - ./backend/:/home/user/backend/
      - ${PWD}/media/:/home/user/media/:delegated

volumes:
  pgdata:
