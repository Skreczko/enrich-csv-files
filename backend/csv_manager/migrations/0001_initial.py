# Generated by Django 3.2.6 on 2023-09-21 20:37

import csv_manager.enums
import csv_manager.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CSVFile',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=csv_manager.models.upload_path)),
                ('original_file_name', models.TextField()),
                ('file_row_count', models.IntegerField(blank=True, help_text='Number of table rows excluding table header', null=True)),
                ('file_headers', models.JSONField(blank=True, help_text='List of headers from file. Use this field instead using file to get headers', null=True)),
                ('source_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enriched_instances', to='csv_manager.csvfile')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='EnrichDetail',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('fetching_response', 'FETCHING_RESPONSE'), ('failed_fetching_response', 'FAILED_FETCHING_RESPONSE'), ('failed_fetching_response_incorrect_url_status', 'FAILED_FETCHING_RESPONSE_INCORRECT_URL_STATUS'), ('failed_fetching_response_other_request_exception', 'FAILED_FETCHING_RESPONSE_OTHER_REQUEST_EXCEPTION'), ('failed_fetching_response_not_json', 'FAILED_FETCHING_RESPONSE_NOT_JSON'), ('failed_fetching_response_empty_json', 'FAILED_FETCHING_RESPONSE_EMPTY_JSON'), ('awaiting_column_selection', 'AWAITING_COLUMN_SELECTION'), ('failed_column_selection', 'FAILED_COLUMN_SELECTION'), ('enriching', 'ENRICHING'), ('failed_enriching', 'FAILED_ENRICHING'), ('completed', 'COMPLETED')], default=csv_manager.enums.EnrichmentStatus['FETCHING_RESPONSE'], help_text='Status of process of enrichment csv file', max_length=50)),
                ('external_url', models.URLField(help_text='The origin URL which was used to enrich')),
                ('external_response', models.FileField(blank=True, null=True, upload_to=csv_manager.models.upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('external_elements_count', models.IntegerField(blank=True, help_text='Number of dict elements', null=True)),
                ('join_type', models.CharField(blank=True, choices=[('left', 'LEFT'), ('right', 'RIGHT'), ('inner', 'INNER')], help_text='Selected type of join', max_length=50, null=True)),
                ('is_flat', models.BooleanField(default=False, help_text='Indicates whether the dict should be flattened when stored in the table cell.')),
                ('json_root_path', models.TextField(default='', help_text="Path pointing to the root element in the JSON structure from which data should be extracted. Use this path if the data you want to process isn't directly at the top level of the JSON.")),
                ('external_elements_key_list', models.JSONField(blank=True, help_text='List of main keys from external_response. Use this field instead using external_response to get keys', null=True)),
                ('selected_key', models.TextField(help_text="Selected json key from 'external_elements_key_list' to be used to merge with 'CSVFile.file_headers'")),
                ('selected_header', models.TextField(help_text="Selected header from 'CSVFile.file_headers' to be used to merge with 'external_elements_key_list'")),
                ('csv_file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='enrich_detail', to='csv_manager.csvfile')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
    ]
