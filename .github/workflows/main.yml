name: CI Check

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Create .env file
      run: |
        echo "SECRET_KEY=random_secret_key" > backend/.env
        echo "BROKER_URL=random_broker_url" >> backend/.env
        echo "DEBUG=False" >> backend/.env
        echo "POSTGRES_HOST=postgres" >> backend/.env
        echo "POSTGRES_NAME=transformer" >> backend/.env
        echo "POSTGRES_USER=postgres" >> backend/.env
        echo "POSTGRES_PORT=5432" >> backend/.env
        echo "CACHE_BACKEND=django_redis.cache.RedisCache" >> backend/.env
        echo "CACHE_LOCATION=redis://redis:6379/1" >> backend/.env
        echo "EMAIL=test@google.com" >> backend/.env
        echo "PASSWORD=password" >> backend/.env

    - name: Start services with Docker Compose
      run: docker-compose -f docker-compose.dev.yml up -d

    - name: Run backend check script
      run: docker exec atc-django bash -c "./check.sh"

    # Run backend tests with coverage using the script
    - name: Run backend tests with coverage using script
      run: docker exec atc-django bash -c "./scripts/run-coverage-check.sh"

    # Upload the new backend coverage report as an artifact
    - name: Upload backend coverage as artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: backend/coverage.xml

    - name: Clean up backend coverage files
      run: rm backend/coverage.xml

    - name: Run frontend check script
      run: docker exec atc-webpack bash -c "./check.sh"

    - name: Run frontend tests with coverage using script
      run: docker exec atc-webpack bash -c "./scripts/run-coverage-check.sh"

      # Upload the new frontend coverage report as an artifact
    - name: Upload frontend coverage as artifact
      uses: actions/upload-artifact@v2
      with:
        name: frontend-coverage-report
        path: frontend/coverage/lcov-report

      # Clean up frontend coverage files
    - name: Clean up frontend coverage files
      run: rm -rf frontend/coverage/lcov-report
