name: CI Check

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Start services with Docker Compose
      run: docker-compose -f docker-compose.dev.yml up -d

    - name: Run backend check script
      run: docker exec atc-django ./backend/check.sh

    # Fix repository ownership
    - name: Add safe directory exception
      run: git config --global safe.directory /__w/Fullstack-Challenge-DawidS/Fullstack-Challenge-DawidS

    # Fetch main branch
    - name: Fetch main branch
      run: git fetch origin main

    # Download previous coverage report
    - name: Download previous coverage report
      uses: actions/download-artifact@v2
      with:
        name: coverage-report
        path: backend/previous-coverage.xml
      continue-on-error: true

    # Create coverage report if not exist
    - name: Ensure previous coverage report exists
      run: |
        if [ ! -f backend/previous-coverage.xml ] || [ ! -s backend/previous-coverage.xml ]; then
          echo '<coverage></coverage>' > backend/previous-coverage.xml
        fi

    # Run tests with coverage using the script
    - name: Run tests with coverage using script
      run: docker exec atc-django ./backend/scripts/run-tests.sh

    # Compare coverage reports
    - name: Compare coverage reports
      run: docker exec atc-django ./backend/scripts/check_coverage.py ./backend/coverage.xml ./backend/previous-coverage.xml

    # Upload the new coverage report as an artifact
    - name: Upload coverage as artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: backend/coverage.xml

    - name: Clean up coverage files
      run: rm backend/coverage.xml

    - name: Run frontend check script
      run: docker exec atc-webpack ./frontend/check.sh

    # Saving artifacts if any
    - name: Save artifacts (if necessary)
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: path-to-your-artifacts-if-any
