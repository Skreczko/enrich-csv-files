name: CI Check

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest
    container:
      image: python:3.11.4

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Backend dependencies caching
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: .cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements/requirements-development.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install backend dependencies
      run: pip install -r backend/requirements/requirements-development.txt

    - name: Run backend check script
      working-directory: ./backend
      env:
        SECRET_KEY: random_secret_key
        BROKER_URL: random_broker_url
        DEBUG: False
      run: ./check.sh

    # Fix repository ownership
    - name: Add safe directory exception
      run: git config --global safe.directory /__w/Fullstack-Challenge-DawidS/Fullstack-Challenge-DawidS

    # Fetch main branch
    - name: Fetch main branch
      run: git fetch origin main

    # Download previous coverage report
    - name: Download previous coverage report
      uses: actions/download-artifact@v2
      with:
        name: coverage-report
        path: backend/previous-coverage.xml
      continue-on-error: true

    - name: Ensure previous coverage report exists
      run: |
        if [ ! -f backend/previous-coverage.xml ]; then
          touch backend/previous-coverage.xml
        fi

    # Run tests with coverage using the script
    - name: Run tests with coverage using script
      working-directory: ./backend/scripts
      run: ./run-coverage.sh

    # Compare coverage reports
    - name: Compare coverage reports
      working-directory: ./backend/scripts
      env:
        GITHUB_ACTIONS: true
      run: ./check_coverage.py ../coverage.xml ../previous-coverage.xml

    # Upload the new coverage report as an artifact
    - name: Upload coverage as artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: backend/coverage.xml

    # Frontend dependencies caching
    - name: Cache frontend dependencies
      uses: actions/cache@v2
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.16'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Run frontend check script
      working-directory: ./frontend
      run: ./check.sh

    # Saving artifacts if any
    - name: Save artifacts (if necessary)
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: path-to-your-artifacts-if-any
